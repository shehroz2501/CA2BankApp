@model BankingSystemMVC.Models.Transaction

<h2>Create Transaction</h2>

<form asp-action="CreateTransaction" method="post" class="needs-validation" novalidate>
    <div class="form-group">
        <label for="accountNumber">Account Number:</label>
        <input type="text" class="form-control" id="accountNumber" name="accountNumber" required />
        <div class="invalid-feedback">Please provide an account number.</div>
    </div>
    <div class="form-group">
        <label for="action">Action:</label>
        <input type="text" class="form-control" id="action" name="action" required />
        <div class="invalid-feedback">Please provide an action.</div>
    </div>
    <div class="form-group">
        <label for="amount">Amount:</label>
        <input type="text" class="form-control" id="amount" name="amount" required />
        <div class="invalid-feedback">Please provide an amount.</div>
    </div>
    <div class="form-group">
        <label for="accType">Account Type:</label>
        <input type="text" class="form-control" id="accType" name="accType" required />
        <div class="invalid-feedback">Please provide an Account Type.</div>
    </div>
    <button type="submit" class="btn btn-primary">Create Transaction</button>
</form>

@section Scripts {
    <script>
        // Prevent form submission if fields are invalid
        (function () {
            'use strict';
            var forms = document.querySelectorAll('.needs-validation');
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
        })();
    </script>
}
